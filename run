#!/usr/bin/env bash

script_dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"

if [ -z "$DEV_ENV" ]; then
    echo "DEV_ENV not present"
    echo "try DEV_ENV=\$(pwd), if running in the main build_desktop repository"
    exit 1
fi

# Do not remove cause DEV_ENV will be used by various scripts in future
export DEV_ENV="$DEV_ENV"

# ARGS
grep=""
os=""

# Flags
dry_run="0"
install=""
build=""
config=""

help() {
    printf "\t--dry    \t\t check which scripts will run, can be used with other flags\n"
    printf "\t--config \t\t gets the .dot repository from github and setup config according to PyDevC\n"
    printf "\t--build  \t\t builds from source\n"
    printf "\t--install\t\t installs all essesntial tools and desktop utilites\n"
}

while [[ $# -gt 0 ]]; do

    # check if its a flag
    if [[ "${1:0:2}" == "--" ]]; then

        echo "Flag: \"$1\""
        if [[ "$1" == "--dry" ]]; then
            dry_run="1"
        elif [[ "$1" == "--install" ]]; then
            install="1"
        elif [[ "$1" == "--build" ]]; then # not implemented
            build="1"
        elif [[ "$1" == "--config" ]]; then
            config="1"
        elif [[ "$1" == "--help" ]]; then
            help
            exit 0
        fi

    else
        # This will be used for filtering out
        echo "ARG: \"$1\""
        grep="$1"
    fi

    shift
done

log() {
    # I don't think I will need to store logs in a file
    if [[ $dry_run == "1" ]]; then
        echo "[DRY_RUN]: $1"
    else
        echo "$1"
    fi
}

log "RUN: env: $env -- grep: $grep"

get_dir(){
    local dir
    dir=`find $script_dir/$1 -mindepth 1 -maxdepth 1 -executable`
    echo $dir
}

runs_dir=`get_dir runs`
install_dir=`get_dir install`
build_dir=`get_dir build`
softwares_dir=`get_dir softwares`

if [[ $install == "1" ]]; then
    for s in $install_dir; do
        if echo "$s" | grep -vq "$grep"; then
            log "grep \"$grep\" filtered out $s"
            continue
        fi

        log "running script: $s"
 
    if [[ $dry_run == "0" ]]; then
        $s
    fi

    done
    exit 0
fi

if [[ $config == "1" ]]; then

    if [[ ! -d $HOME/.dot ]]; then
        git clone https://github.com/PyDevC/.dot.git $HOME/.dot
        mkdir -p ~/personal ~/personal/exp ~/personal/env/python

        # this is needed so that It works as intended
        ln -s ~/.dot/bin ~/bin
        rm ~/.zshrc
        rm ~/.zsh_profile
        ln -s ~/.dot/zsh/.zshrc ~/.zshrc
        ln -s ~/.dot/zsh/.zsh_profile ~/.zsh_profile

        . ~/.zshrc
        syncf
        exit 0
    else
        echo "config already exists, remove it and re-run"
        echo "or check for command in build_desktop/run" 
        exit 0
    fi
fi

for s in $runs_dir; do
    if echo "$s" | grep -vq "$grep"; then
        log "grep \"$grep\" filtered out $s"
        continue
    fi

    log "running script: $s"

    if [[ $dry_run == "0" ]]; then
        $s
    fi
done
